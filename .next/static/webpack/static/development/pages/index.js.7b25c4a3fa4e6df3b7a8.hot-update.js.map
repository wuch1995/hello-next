{"version":3,"file":"static/webpack/static/development/pages/index.js.7b25c4a3fa4e6df3b7a8.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\nimport dynamic from 'next/dynamic'\nimport Icon from '../components/icon'\n\nconst Doodle = dynamic(\n  () => import('../components/doodle'),\n  {\n    ssr: false\n  }\n)\n\nfunction getPosts() {\n  return [\n    { id: 'hello-nextjs', title: 'Hello Next.js ðŸ˜€', tag: 'HTML/CSS', time: '2012-2-3 12:23:22' },\n    { id: 'learn-nextjs', title: 'Learn Next.js is awesome', tag: 'Vue', time: '2012-2-3 12:23:22' },\n    { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT', tag: 'React', time: '2012-2-3 12:23:22' }\n  ]\n}\n\nfunction getTags () {\n  return [\n    { tag: 'HTML/CSS' },\n    { tag: 'Javascript' },\n    { tag: 'Vue' },\n    { tag: 'React' }\n  ]\n}\n\nconst Tags = ({ tags }) => (\n  <div className=\"tag-wrap\">\n    <div className=\"tag-item active\">All</div>\n    {\n      getTags().map((item, index) => (\n        <div key={index} className=\"tag-item\"><TagIcon tag={item.tag} size={15}></TagIcon><span className=\"tag-text\">{item.tag}</span></div>\n      ))\n    }\n    <style jsx>{`\n      .tag-wrap {\n        display: flex;\n      }\n      .tag-item {\n        padding: 7px 15px;\n        border-radius: 30px;\n        display: flex;\n        align-items: center;\n        margin-right: 15px;\n        cursor: pointer;\n      }\n      .tag-item.active {\n        background: #FFBAB3;\n        color: #fff;\n      }\n      .tag-text {\n        margin-left: 5px;\n      }\n    `}</style>\n  </div>\n)\n\nconst TagIcon = ({tag, size = 20}) => {\n  tag = tag.toLowerCase()\n  let iconName = `icon-${tag}`\n  switch (tag) {\n    case 'html/css':\n      iconName = 'icon-html'\n      break\n    case 'javascript':\n      iconName = 'icon-js'\n      break\n    default:\n      break\n  }\n  return (\n    <Icon icon={iconName} height={size} width={size}></Icon>\n  )\n}\n\nconst PostLink = ({ post }) => (\n  <li>\n    <Link as={`/post/${post.id}`} href={`/post?title=${post.title}`}>\n      <a>{post.title}</a>\n    </Link>\n    <div className=\"post-info-wrap\">\n      <span className=\"post-time\">{post.time}</span>\n      <TagIcon tag={post.tag} size=\"15\"></TagIcon>\n      <span>{post.tag}</span>\n    </div>\n    <style jsx>{`\n      li {\n        margin-bottom: 20px;\n      }\n      a {\n        text-decoration: none;\n        color: #222222;\n        font-family: 'Arial';\n        font-size: 20px;\n      }\n      a:hover {\n        opacity: 0.6;\n      }\n      .post-info-wrap {\n        margin-top: 8px;\n        display: flex;\n        align-items: center;\n      }\n      .post-time {\n        color: #666666;\n        margin-right: 10px;\n      }\n    `}</style>\n  </li>\n)\n\nexport default function Blog() {\n  return (\n    <Layout>\n      <Tags></Tags>\n      <ul className=\"post-wrap\">\n        {getPosts().map(post => (\n          <PostLink key={post.id} post={post} />\n        ))}\n      </ul>\n      <style jsx>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n\n        .doodle-wrap {\n          position: absolute;\n          left: 0;\n          right: 0;\n          top: 0;\n          bottom: 0;\n          z-index: -1;\n        }\n        .post-wrap {\n          margin-top: 30px;\n        }\n      `}</style>\n    </Layout>\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAAA;AADA;AACA;AA8BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AARA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAPA;AAAA;AADA;AACA;AAmCA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAHA;AAAA;AA6CA;;;;A","sourceRoot":""}